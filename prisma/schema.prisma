// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(uuid())
  discordId     String    @unique
  character     Character?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Character {
  id            String    @id @default(uuid())
  name          String
  level         Int       @default(1)
  experience    Int       @default(0)
  health        Int       @default(100)
  maxHealth     Int       @default(100)
  attack        Int       @default(10)
  defense       Int       @default(10)
  currentIsland String    @default("starter_island")
  mentor        String?   // YB, Tierison, LYuka, atau GarryAng
  luffyProgress Int       @default(0)
  zoroProgress  Int       @default(0)
  usoppProgress Int       @default(0)
  sanjiProgress Int       @default(0)
  dailyHealCount Int      @default(0)
  lastHealTime  DateTime?
  combo         Int       @default(0)
  questPoints   Int       @default(0)
  explorationPoints Int   @default(0)
  lastDailyReset DateTime?
  statusEffects String    @default("{}")
  activeBuffs   String    @default("{}")
  inventory     Inventory[]
  quests        Quest[]
  battleLogs    BattleLog[]
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  location      Location  @relation(fields: [currentIsland], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Inventory {
  id          String    @id @default(uuid())
  itemId      String
  quantity    Int
  characterId String
  character   Character @relation(fields: [characterId], references: [id])
  item        Item      @relation(fields: [itemId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([characterId, itemId])
}

model Quest {
  id          String    @id @default(cuid())
  name        String
  description String
  objectives  String    @default("{\"tasks\":[]}")
  rewards     String    @default("{}")
  reward      Int       @default(0)
  status      String    @default("ACTIVE")
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  type        String    @default("MISC")
  isDaily     Boolean   @default(false)
  expiresAt   DateTime?

  @@index([characterId])
}

model Location {
  id                String      @id
  name              String
  description       String
  level             Int         @default(1)
  weather           String      @default("sunny")
  lastWeatherUpdate DateTime    @default(now())
  activeEvent       String?
  characters        Character[]
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model BattleLog {
  id          String    @id @default(uuid())
  characterId String
  character   Character @relation(fields: [characterId], references: [id])
  enemyType   String
  enemyLevel  Int
  damage      Int
  experience  Int
  rewards     String    @default("{}")  // Untuk item drops
  won         Boolean
  createdAt   DateTime  @default(now())
}

model Item {
  id          String      @id
  name        String
  description String
  type        String      // INGREDIENT, FOOD, EQUIPMENT, etc.
  value       Int         @default(0)
  effect      String      @default("{}")  // JSON string untuk efek item
  inventory   Inventory[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}