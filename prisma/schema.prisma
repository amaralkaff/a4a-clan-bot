// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(uuid())
  discordId     String    @unique
  character     Character?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([discordId])
}

model Character {
  id            String    @id @default(uuid())
  name          String
  level         Int       @default(1)
  experience    Int       @default(0)
  health        Int       @default(100)
  maxHealth     Int       @default(100)
  attack        Int       @default(10)
  defense       Int       @default(10)
  currentIsland String    @default("starter_island")
  mentor        String?   
  
  // Progress tracking
  luffyProgress Int       @default(0)
  zoroProgress  Int       @default(0)
  usoppProgress Int       @default(0)
  sanjiProgress Int       @default(0)
  
  // Daily limits
  dailyHealCount Int      @default(0)
  lastHealTime  DateTime?
  lastDailyReset DateTime?
  
  // Combat stats
  combo         Int       @default(0)
  wins          Int       @default(0)
  losses        Int       @default(0)
  winStreak     Int       @default(0)
  highestStreak Int       @default(0)
  
  // Hunt streak system
  huntStreak        Int       @default(0)
  highestHuntStreak Int       @default(0)
  lastHuntTime      DateTime?
  
  // Points system
  questPoints   Int       @default(0)
  explorationPoints Int   @default(0)
  
  // Effects and buffs
  statusEffects String    @default("{\"effects\":[]}")
  activeBuffs   String    @default("{\"buffs\":[]}")
  
  // Economy
  coins         Int       @default(0)
  bank          Int       @default(0)
  totalGambled  Int       @default(0)
  totalWon      Int       @default(0)
  lastGambleTime DateTime?

  // Equipment slots
  equippedWeapon String?
  equippedArmor  String?
  equippedAccessory String?
  
  // Relations
  inventory     Inventory[]
  quests        Quest[]
  battles       Battle[]
  transactions  Transaction[]
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  location      Location  @relation(fields: [currentIsland], references: [id])
  
  // Timestamps
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([level, currentIsland])
  @@index([mentor])
  @@index([lastDailyReset])
  @@index([huntStreak, highestHuntStreak])
}

model Battle {
  id          String    @id @default(uuid())
  characterId String
  character   Character @relation(fields: [characterId], references: [id])
  enemyType   String
  enemyLevel  Int
  startedAt   DateTime  @default(now())
  endedAt     DateTime?
  status      String    @default("IN_PROGRESS")
  turns       String    @default("[]")
  finalStats  String?   @default("{}")
  rewards     String?   @default("{}")
  
  @@index([characterId, status])
}

model Inventory {
  id          String    @id @default(uuid())
  itemId      String
  quantity    Int
  durability  Int?      
  isEquipped  Boolean   @default(false)
  slot        String?   
  expiresAt   DateTime?
  effect      String?   @default("{}")
  stats       String?   @default("{}")  // Untuk menyimpan stats equipment
  level       Int?      // Level equipment
  upgrades    Int?      @default(0)  // Jumlah upgrade yang sudah dilakukan
  maxDurability Int?    // Maximum durability
  characterId String
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  item        Item      @relation(fields: [itemId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([characterId, itemId])
  @@index([characterId, isEquipped, slot])
}

model Item {
  id            String    @id
  name          String
  description   String
  type          String    
  value         Int       @default(0)
  effect        String    @default("{}")
  maxDurability Int?    
  stackLimit    Int       @default(999)
  rarity        String    @default("COMMON")
  baseStats     String?   @default("{}")  // Stats dasar item
  upgradeStats  String?   @default("{}")  // Stats per level upgrade
  maxLevel      Int?      // Maximum level untuk upgrade
  inventory     Inventory[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([type, rarity])
}

model Quest {
  id          String    @id @default(cuid())
  templateId  String    @default("none")  // Default value untuk existing rows
  name        String
  description String
  type        String    
  objectives  String    @default("{}")
  rewards     String    @default("{}")
  progress    String    @default("{\"current\": 0, \"required\": 1}")
  status      String    @default("ACTIVE")
  characterId String
  character   Character @relation(fields: [characterId], references: [id])
  startedAt   DateTime  @default(now())
  completedAt DateTime?
  expiresAt   DateTime?
  
  @@index([characterId, status])
  @@index([templateId])
}

model QuestTemplate {
  id            String    @id
  name          String
  description   String
  type          String
  requirements  String    @default("{}")
  objectives    String    @default("{}")
  rewards       String    @default("{}")
  isRepeatable  Boolean   @default(false)
  cooldown      Int?     
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Location {
  id                String      @id
  name              String
  description       String
  level             Int         @default(1)
  weather           String      @default("sunny")
  lastWeatherUpdate DateTime    @default(now())
  activeEvent       String?
  characters        Character[]
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  @@index([level])
  @@index([weather])
}

model Transaction {
  id          String    @id @default(uuid())
  characterId String
  character   Character @relation(fields: [characterId], references: [id])
  type        String    
  amount      Int
  description String
  createdAt   DateTime  @default(now())

  @@index([characterId, type, createdAt])
}